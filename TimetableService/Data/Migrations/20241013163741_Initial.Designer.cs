// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TimetableService.Data;

#nullable disable

namespace TimetableService.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241013163741_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TimetableService.Models.Appointments.Appointment", b =>
                {
                    b.Property<int>("TimetableId")
                        .HasColumnType("integer")
                        .HasColumnName("timetable_id");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("time");

                    b.Property<string>("UserId")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("TimetableId", "Time")
                        .HasName("pk_appointment");

                    b.ToTable("appointment", (string)null);
                });

            modelBuilder.Entity("TimetableService.Models.Timetables.Timetable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DoctorId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("doctor_id");

                    b.Property<DateTime>("From")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("from");

                    b.Property<int>("HospitalId")
                        .HasColumnType("integer")
                        .HasColumnName("hospital_id");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("room");

                    b.Property<DateTime>("To")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("to");

                    b.HasKey("Id")
                        .HasName("pk_timetables");

                    b.ToTable("timetables", (string)null);
                });

            modelBuilder.Entity("TimetableService.Models.Appointments.Appointment", b =>
                {
                    b.HasOne("TimetableService.Models.Timetables.Timetable", null)
                        .WithMany("Appointments")
                        .HasForeignKey("TimetableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_appointment_timetables_timetable_id");
                });

            modelBuilder.Entity("TimetableService.Models.Timetables.Timetable", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
